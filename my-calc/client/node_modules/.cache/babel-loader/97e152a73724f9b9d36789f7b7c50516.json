{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\calc\\\\calc-react-redux\\\\my-calc\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Calc from './components/Calc';\nimport { valueOperation } from './redux/actions/actions';\nimport operation from './data/dataRedux';\nimport History from './components/History';\nimport getHistory from './scripts/GetRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event));else if (recovery) dispatch(recovery());\n  };\n\n  const stateArray = useCallback(() => operation.map((val, i) => {\n    console.log(val.type);\n    const buttonSettings = val.type === 0 ? {\n      color: 'green',\n      size: 4\n    } : {\n      color: '#B0C4DE',\n      size: 3\n    };\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: buttonSettings.size,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          bgcolor: buttonSettings.color,\n          color: 'black',\n          borderRadius: 2,\n          borderColor: 'text.primary',\n          gridRow: '5',\n          width: '100%',\n          gridColumn: 'span 2'\n        },\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: handleClick(val.type, val.func),\n        className: val.classStyle,\n        children: val.type\n      }, i.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }), []);\n  useEffect(() => {\n    dispatch(getHistory());\n  }, [store.num.updateNedeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: store,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8pAHYtNkROVEl2cBBy+S1Uek7Rk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default connect()(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/App.js"],"names":["React","useCallback","useEffect","Grid","styled","Paper","Button","connect","useDispatch","useSelector","Calc","valueOperation","operation","History","getHistory","App","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","store","state","dispatch","handleClick","event","recovery","stateArray","map","val","i","console","log","type","buttonSettings","size","bgcolor","borderRadius","borderColor","gridRow","width","gridColumn","func","classStyle","toString","num","updateNedeed"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Calc from './components/Calc'\nimport { valueOperation } from './redux/actions/actions'\nimport operation from './data/dataRedux'\nimport History from './components/History'\nimport getHistory from './scripts/GetRequest'\n\nconst App = () => {\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n  const store = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event))\n    else if (recovery) dispatch(recovery())\n  }\n\n  const stateArray = useCallback(() => operation.map((val, i) => {\n    console.log(val.type)\n    const buttonSettings = val.type === 0 ? { color: 'green', size: 4 } : { color: '#B0C4DE', size: 3 }\n    return (\n      <Grid item xs={buttonSettings.size}>\n        <Button\n          sx={{\n            bgcolor: buttonSettings.color,\n            color: 'black',\n            borderRadius: 2,\n            borderColor: 'text.primary',\n            gridRow: '5',\n            width: '100%',\n            gridColumn: 'span 2',\n          }}\n          variant=\"outlined\"\n          size=\"large\"\n          onClick={handleClick(val.type, val.func)}\n          key={i.toString()}\n          className={val.classStyle}\n        >\n          {val.type}\n        </Button>\n      </Grid>\n    )\n  }), [])\n\n  useEffect(() => {\n    dispatch(getHistory())\n  }, [store.num.updateNedeed])\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2} sx={{ width: 300 }}>\n        <Grid item>\n          <Item>\n            <Calc values={store} operationArray={stateArray} />\n          </Item>\n        </Grid>\n        <Grid item>\n          <Item>\n            <History history={store} />\n          </Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\nexport default connect()(App)\n"]},"metadata":{},"sourceType":"module"}