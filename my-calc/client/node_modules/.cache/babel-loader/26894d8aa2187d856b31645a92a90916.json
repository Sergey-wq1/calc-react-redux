{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\my-calc\\\\client\\\\src\\\\App.js\";\nimport { connect } from \"react-redux\";\nimport Calc from \"./components/Calc\";\nimport { acNumOperation, delplyNumOperation, eightNumOperation, evlaNumOperation, fiveNumOperation, fourNumOperation, minusplyNumOperation, multiplyNumOperation, nineNumOperation, oneNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, procentNumOperation, sevenNumOperation, sixNumOperation, threeNumOperation, twoNumOperation, zeroNumOperation } from \"./actions/actions\";\nimport { operationAr } from './data/dataRedux';\nimport functions from './data/functions';\nimport { typeOperation } from \"./scripts/buttonCalback\";\nimport History from \"./components/History\";\nimport { ButtonJSX } from \"./scripts/retButJSX\";\nimport { Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  const funcOperation = functions(props);\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const stateArray = operationAr.map((val, i) => {\n    let valType = typeOperation(val.type);\n\n    if (val.type === '0') {\n      return ButtonJSX.zero(funcOperation[val.data], i, val);\n    } else if (valType) {\n      return ButtonJSX.greyButton(funcOperation[val.data], i, val);\n    } else {\n      return ButtonJSX.rest(funcOperation[val.data], i, val);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            allIn: props,\n            operationAr: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    history: state.history,\n    counter: state.num\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    one: () => dispatch({\n      type: oneNumOperation\n    }),\n    two: () => dispatch({\n      type: twoNumOperation\n    }),\n    three: () => dispatch({\n      type: threeNumOperation\n    }),\n    four: () => dispatch({\n      type: fourNumOperation\n    }),\n    five: () => dispatch({\n      type: fiveNumOperation\n    }),\n    six: () => dispatch({\n      type: sixNumOperation\n    }),\n    seven: () => dispatch({\n      type: sevenNumOperation\n    }),\n    eight: () => dispatch({\n      type: eightNumOperation\n    }),\n    nine: () => dispatch({\n      type: nineNumOperation\n    }),\n    zero: () => dispatch({\n      type: zeroNumOperation\n    }),\n    ac: () => dispatch({\n      type: acNumOperation\n    }),\n    eval: () => dispatch({\n      type: evlaNumOperation\n    }),\n    plus: () => dispatch({\n      type: plusNumOperation\n    }),\n    del: () => dispatch({\n      type: delplyNumOperation\n    }),\n    minus: () => dispatch({\n      type: minusplyNumOperation\n    }),\n    multiply: () => dispatch({\n      type: multiplyNumOperation\n    }),\n    point: () => dispatch({\n      type: pointNumOperation\n    }),\n    procent: () => dispatch({\n      type: procentNumOperation\n    }),\n    plusMinus: () => dispatch({\n      type: plusminNumOperation\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/my-calc/client/src/App.js"],"names":["connect","Calc","acNumOperation","delplyNumOperation","eightNumOperation","evlaNumOperation","fiveNumOperation","fourNumOperation","minusplyNumOperation","multiplyNumOperation","nineNumOperation","oneNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","procentNumOperation","sevenNumOperation","sixNumOperation","threeNumOperation","twoNumOperation","zeroNumOperation","operationAr","functions","typeOperation","History","ButtonJSX","Grid","styled","Paper","App","props","funcOperation","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","stateArray","map","val","i","valType","type","zero","data","greyButton","rest","mapStateToProps","state","history","counter","num","mapDispatchToProps","dispatch","one","two","three","four","five","six","seven","eight","nine","ac","eval","plus","del","minus","multiply","point","procent","plusMinus"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\"\nimport Calc from \"./components/Calc\"\nimport { acNumOperation, delplyNumOperation, eightNumOperation, evlaNumOperation, fiveNumOperation, fourNumOperation, minusplyNumOperation, multiplyNumOperation, nineNumOperation, oneNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, procentNumOperation, sevenNumOperation, sixNumOperation, threeNumOperation, twoNumOperation, zeroNumOperation } from \"./actions/actions\";\nimport { operationAr } from './data/dataRedux'\nimport functions from './data/functions'\nimport { typeOperation } from \"./scripts/buttonCalback\"\nimport History from \"./components/History\"\nimport { ButtonJSX } from \"./scripts/retButJSX\"\nimport { Grid } from \"@mui/material\"\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\n\nfunction App(props) {\n\nconst funcOperation = functions(props)\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}))\n\n  const stateArray = operationAr.map((val, i) => {\n    let valType = typeOperation(val.type)\n    if(val.type === '0') {\n      return ButtonJSX.zero(funcOperation[val.data], i, val)\n    } else if(valType){\n      return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    } else {\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  }})\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n      <Grid item>\n          <Item><Calc allIn={props} operationAr={stateArray}/></Item>\n        </Grid>\n        <Grid item>\n          <Item><History history={props}/></Item>\n        </Grid>\n    </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    history: state.history,\n    counter: state.num\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    one: () => dispatch({ type: oneNumOperation }),\n    two: () => dispatch({ type: twoNumOperation }),\n    three: () => dispatch({ type: threeNumOperation }),\n    four: () => dispatch({ type: fourNumOperation }),\n    five: () => dispatch({ type: fiveNumOperation }),\n    six: () => dispatch({ type: sixNumOperation }),\n    seven: () => dispatch({ type: sevenNumOperation }),\n    eight: () => dispatch({ type: eightNumOperation }),\n    nine: () => dispatch({ type: nineNumOperation }),\n    zero: () => dispatch({ type: zeroNumOperation }),\n\n    ac: () => dispatch({ type: acNumOperation }),\n    eval: () => dispatch({ type: evlaNumOperation }),\n    plus: () => dispatch({type: plusNumOperation}),\n    del: () => dispatch({type: delplyNumOperation}),\n    minus: () => dispatch({ type: minusplyNumOperation }),\n    multiply: () => dispatch({type: multiplyNumOperation}),\n    point: () => dispatch({type: pointNumOperation}),\n    procent: () => dispatch({type: procentNumOperation}),\n    plusMinus: () => dispatch({type: plusminNumOperation})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n"]},"metadata":{},"sourceType":"module"}