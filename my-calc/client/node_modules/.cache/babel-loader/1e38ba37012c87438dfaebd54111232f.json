{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport { evaluate } from 'mathjs';\nimport { replacementSign } from '../helpers/changesOperationsMath';\nimport deleteRequest from '../api/apiDeletehistory';\nimport updateHistory from '../helpers/updateHistory';\n\nconst foundSignIndex = str => {\n  const arr = [];\n\n  for (let i = str.length; i > 0; i -= 1) {\n    if (str[i] === '+' || str[i] === '-' || str[i] === '*' || str[i] === '/') {\n      arr.push(i);\n    }\n  }\n\n  return arr[0];\n};\n\nconst inspectionSigns = _counter => {\n  const indexSign = foundSignIndex(_counter);\n\n  const sliceHistoryStart = _counter.slice(0, indexSign + 1);\n\n  const sliceHistoryEnd = _counter.slice(indexSign + 1, _counter.length);\n\n  if (indexSign) {\n    if (_counter[indexSign - 1] === '(') {\n      const sliceStartPlus = sliceHistoryStart.slice(0, indexSign - 1);\n      const sliceEndPlus = sliceHistoryEnd.slice(0, sliceHistoryEnd.length - 1);\n      return `${sliceStartPlus}${sliceEndPlus}`;\n    }\n\n    return `${sliceHistoryStart}(-${sliceHistoryEnd})`;\n  }\n\n  return _counter;\n};\n\nconst changeSign = _counter => {\n  const sign = ['+', '-', '/', '*'];\n  const lengthCounter = _counter.length;\n\n  if (_counter[lengthCounter - 1] === '-') {\n    const historyCounterPlusEnd = _counter.slice(0, lengthCounter - 1);\n\n    return `${historyCounterPlusEnd}+`;\n  }\n\n  if (_counter[lengthCounter - 1] === '+') {\n    const historyCounter = _counter.slice(0, lengthCounter - 1);\n\n    return `${historyCounter}-`;\n  }\n\n  if (!_counter[lengthCounter - 1].includes(sign)) {\n    return inspectionSigns(_counter);\n  }\n\n  return _counter;\n};\n\nclass NumericStore {\n  constructor() {\n    this.counter = 0;\n    this.history = [];\n\n    this.numericOperation = number => {\n      if (this.counter === '0' && state.counter.length === 1) this.counter = `${this.counter.slice(1, 2)}${number}`;else this.counter = `${this.counter}${number}`;\n    };\n\n    this.plusOperation = () => {\n      this.counter = `${replacementSign(this.counter)}+`;\n    };\n\n    this.deleteAllOperation = () => {\n      this.counter = 0;\n    };\n\n    this.multiplyOperation = () => {\n      this.counter = `${replacementSign(this.counter)}*`;\n    };\n\n    this.devideOperation = () => {\n      this.counter = `${replacementSign(this.counter)}/`;\n    };\n\n    this.pointOperation = () => {\n      this.counter = `${replacementSign(this.counter)}.`;\n    };\n\n    this.percentOperation = () => {\n      const indexSign = foundSignIndex(this.counter.slice(0, this.counter.length - 1));\n      const startHistory = this.counter.slice(0, indexSign);\n      const percent = this.counter.slice(indexSign + 1, this.counter.length);\n      const resultBeforePercent = evaluate(startHistory.slice(0, startHistory.length - 1));\n      const resultCounter = evaluate(resultBeforePercent / 100 * percent);\n      this.counter = resultCounter;\n    };\n\n    this.changeSign = () => {\n      this.counter = changeSign(this.counter);\n    };\n\n    this.deleteHistoryApi = (expression, result) => {\n      deleteRequest(expression, result).then(() => {\n        this.history = updateHistory(this.history);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.showNewHistory = history => {\n      this.history = history;\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nexport default new NumericStore();","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/store/numericStore.js"],"names":["makeAutoObservable","evaluate","replacementSign","deleteRequest","updateHistory","foundSignIndex","str","arr","i","length","push","inspectionSigns","_counter","indexSign","sliceHistoryStart","slice","sliceHistoryEnd","sliceStartPlus","sliceEndPlus","changeSign","sign","lengthCounter","historyCounterPlusEnd","historyCounter","includes","NumericStore","constructor","counter","history","numericOperation","number","state","plusOperation","deleteAllOperation","multiplyOperation","devideOperation","pointOperation","percentOperation","startHistory","percent","resultBeforePercent","resultCounter","deleteHistoryApi","expression","result","then","catch","error","console","log","showNewHistory"],"mappings":"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","sourcesContent":["import { makeAutoObservable } from 'mobx'\r\nimport { evaluate } from 'mathjs'\r\nimport { replacementSign } from '../helpers/changesOperationsMath'\r\nimport deleteRequest from '../api/apiDeletehistory'\r\nimport updateHistory from '../helpers/updateHistory'\r\n\r\nconst foundSignIndex = (str) => {\r\n  const arr = []\r\n  for (let i = str.length; i > 0; i -= 1) {\r\n    if (str[i] === '+' || str[i] === '-'\r\n      || str[i] === '*' || str[i] === '/') {\r\n      arr.push(i)\r\n    }\r\n  }\r\n  return arr[0]\r\n}\r\n\r\nconst inspectionSigns = (_counter) => {\r\n  const indexSign = foundSignIndex(_counter)\r\n  const sliceHistoryStart = _counter.slice(0, indexSign + 1)\r\n  const sliceHistoryEnd = _counter.slice(indexSign + 1, _counter.length)\r\n  if (indexSign) {\r\n    if (_counter[indexSign - 1] === '(') {\r\n      const sliceStartPlus = sliceHistoryStart.slice(0, indexSign - 1)\r\n      const sliceEndPlus = sliceHistoryEnd.slice(0, sliceHistoryEnd.length - 1)\r\n      return `${sliceStartPlus}${sliceEndPlus}`\r\n    }\r\n    return `${sliceHistoryStart}(-${sliceHistoryEnd})`\r\n  }\r\n  return _counter\r\n}\r\n\r\nconst changeSign = (_counter) => {\r\n  const sign = ['+', '-', '/', '*']\r\n  const lengthCounter = _counter.length\r\n  if (_counter[lengthCounter - 1] === '-') {\r\n    const historyCounterPlusEnd = _counter.slice(0, lengthCounter - 1)\r\n    return `${historyCounterPlusEnd}+`\r\n  }\r\n  if (_counter[lengthCounter - 1] === '+') {\r\n    const historyCounter = _counter.slice(0, lengthCounter - 1)\r\n    return `${historyCounter}-`\r\n  } if (!_counter[lengthCounter - 1].includes(sign)) {\r\n    return inspectionSigns(_counter)\r\n  }\r\n  return _counter\r\n}\r\n\r\nclass NumericStore {\r\n  counter = 0\r\n  history = []\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  numericOperation = (number) => {\r\n    if (this.counter === '0' && state.counter.length === 1)\r\n      this.counter = `${this.counter.slice(1, 2)}${number}`\r\n    else this.counter = `${this.counter}${number}`\r\n  }\r\n\r\n  plusOperation = () => {\r\n    this.counter = `${replacementSign(this.counter)}+`\r\n  }\r\n\r\n  deleteAllOperation = () => {\r\n    this.counter = 0\r\n  }\r\n\r\n  multiplyOperation = () => {\r\n    this.counter = `${replacementSign(this.counter)}*`\r\n  }\r\n\r\n  devideOperation = () => {\r\n    this.counter = `${replacementSign(this.counter)}/`\r\n  }\r\n\r\n  pointOperation = () => {\r\n    this.counter = `${replacementSign(this.counter)}.`\r\n  }\r\n\r\n  percentOperation = () => {\r\n    const indexSign = foundSignIndex(this.counter.slice(0, this.counter.length - 1))\r\n    const startHistory = this.counter.slice(0, indexSign)\r\n    const percent = this.counter.slice(indexSign + 1, this.counter.length)\r\n    const resultBeforePercent = evaluate(startHistory.slice(0, startHistory.length - 1))\r\n    const resultCounter = evaluate((resultBeforePercent / 100) * percent)\r\n    this.counter = resultCounter\r\n  }\r\n\r\n  changeSign = () => {\r\n    this.counter = changeSign(this.counter)\r\n  }\r\n\r\n  deleteHistoryApi = (expression, result) => {\r\n    deleteRequest(expression, result)\r\n      .then(() => {\r\n        this.history = updateHistory(this.history)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  showNewHistory = (history) => {\r\n    this.history = history\r\n  }\r\n}\r\n\r\nexport default new NumericStore()"]},"metadata":{},"sourceType":"module"}