{"ast":null,"code":"import { acNumOperation, delplyNumOperation, evlaNumOperation, minusplyNumOperation, multiplyNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, procentNumOperation } from \"../actions/actions\";\nimport Fetch from \"../scripts/dataFetch\";\nimport { GetRequest } from \"../scripts/GetRequest\";\nimport { OperationSign } from \"../scripts/PutAway\";\nimport { retObjType } from \"../scripts/valuesNumOperation\";\nconst initialState = {\n  addHistory: [],\n  history: [],\n  counter: ''\n};\nexport const numReducer = (state = initialState, action) => {\n  let operationSign = new OperationSign();\n\n  switch (action.type) {\n    case retObjType(action.type)().type:\n      return { ...state,\n        addHistory: [],\n        counter: state.counter + `${retObjType(action.type)().value}`\n      };\n\n    case plusNumOperation:\n      let plus = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: plus + '+'\n      };\n\n    case acNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: ''\n      };\n\n    case multiplyNumOperation:\n      let multi = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: multi + '*'\n      };\n\n    case minusplyNumOperation:\n      let minus = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: minus + '-'\n      };\n\n    case delplyNumOperation:\n      let del = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: del + '/'\n      };\n\n    case pointNumOperation:\n      let point = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: point + '.'\n      };\n\n    case procentNumOperation:\n      let proc = operationSign.putAway(state.counter);\n      return { ...state,\n        addHistory: [],\n        counter: proc + '%'\n      };\n\n    case plusminNumOperation:\n      let key = state.counter;\n\n      if (key[key.length - 1] === '+') {\n        return { ...state,\n          addHistory: [],\n          counter: state.counter.slice(0, key.length - 1) + '-'\n        };\n      } else if (key[key.length - 1] === '-') {\n        return { ...state,\n          addHistory: [],\n          counter: state.counter.slice(0, key.length - 1) + '+'\n        };\n      }\n\n      break;\n\n    case evlaNumOperation:\n      let tryCatch = operationSign.endValue(state.counter);\n      let result = operationSign.putFirst(tryCatch);\n      let saveHistory = state.counter;\n      Fetch('/', 'POST', saveHistory, result);\n      let b = GetRequest.getHistory().then(data => {\n        console.log(...data);\n        return {\n          addHistory: state.addHistory.push(...data)\n        };\n      });\n      return {\n        history: state.addHistory,\n        counter: result\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/github/my-calc/client/src/redux/numReducer.js"],"names":["acNumOperation","delplyNumOperation","evlaNumOperation","minusplyNumOperation","multiplyNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","procentNumOperation","Fetch","GetRequest","OperationSign","retObjType","initialState","addHistory","history","counter","numReducer","state","action","operationSign","type","value","plus","putAway","multi","minus","del","point","proc","key","length","slice","tryCatch","endValue","result","putFirst","saveHistory","b","getHistory","then","data","console","log","push"],"mappings":"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","sourcesContent":["import {\r\n    acNumOperation,\r\n    delplyNumOperation,\r\n    evlaNumOperation,\r\n    minusplyNumOperation,\r\n    multiplyNumOperation,\r\n    plusminNumOperation,\r\n    plusNumOperation,\r\n    pointNumOperation,\r\n    procentNumOperation\r\n} from \"../actions/actions\"\r\nimport Fetch from \"../scripts/dataFetch\"\r\nimport {\r\n    GetRequest\r\n} from \"../scripts/GetRequest\"\r\nimport {\r\n    OperationSign\r\n} from \"../scripts/PutAway\"\r\nimport {\r\n    retObjType\r\n} from \"../scripts/valuesNumOperation\"\r\n\r\nconst initialState = {\r\n    addHistory: [],\r\n    history: [],\r\n    counter: ''\r\n}\r\n\r\nexport const numReducer = (state = initialState, action) => {\r\n    let operationSign = new OperationSign()\r\n    switch (action.type) {\r\n        case retObjType(action.type)().type:\r\n            return {\r\n                ...state,\r\n                addHistory: [],\r\n                    counter: state.counter + `${retObjType(action.type)().value}`\r\n            }\r\n            case plusNumOperation:\r\n                let plus = operationSign.putAway(state.counter)\r\n                return {\r\n                    ...state,\r\n                    addHistory: [],\r\n                        counter: plus + '+'\r\n                }\r\n                case acNumOperation:\r\n                    return {\r\n                        ...state,\r\n                        addHistory: [],\r\n                            counter: ''\r\n                    }\r\n                    case multiplyNumOperation:\r\n                        let multi = operationSign.putAway(state.counter)\r\n                        return {\r\n                            ...state,\r\n                            addHistory: [],\r\n                                counter: multi + '*'\r\n                        }\r\n                        case minusplyNumOperation:\r\n                            let minus = operationSign.putAway(state.counter)\r\n                            return {\r\n                                ...state,\r\n                                addHistory: [],\r\n                                    counter: minus + '-'\r\n                            }\r\n                            case delplyNumOperation:\r\n                                let del = operationSign.putAway(state.counter)\r\n                                return {\r\n                                    ...state,\r\n                                    addHistory: [],\r\n                                        counter: del + '/'\r\n                                }\r\n                                case pointNumOperation:\r\n                                    let point = operationSign.putAway(state.counter)\r\n                                    return {\r\n                                        ...state,\r\n                                        addHistory: [],\r\n                                            counter: point + '.'\r\n                                    }\r\n                                    case procentNumOperation:\r\n                                        let proc = operationSign.putAway(state.counter)\r\n                                        return {\r\n                                            ...state,\r\n                                            addHistory: [],\r\n                                                counter: proc + '%'\r\n                                        }\r\n                                        case plusminNumOperation:\r\n                                            let key = state.counter\r\n                                            if (key[key.length - 1] === '+') {\r\n                                                return {\r\n                                                    ...state,\r\n                                                    addHistory: [],\r\n                                                    counter: state.counter.slice(0, key.length - 1) + '-'\r\n                                                }\r\n                                            } else if (key[key.length - 1] === '-') {\r\n                                                return {\r\n                                                    ...state,\r\n                                                    addHistory: [],\r\n                                                    counter: state.counter.slice(0, key.length - 1) + '+'\r\n                                                }\r\n                                            }\r\n                                            break\r\n                                        case evlaNumOperation:\r\n                                            let tryCatch = operationSign.endValue(state.counter)\r\n                                            let result = operationSign.putFirst(tryCatch)\r\n                                            let saveHistory = state.counter\r\n                                            Fetch('/', 'POST', saveHistory, result)\r\n                                            let b = GetRequest.getHistory().then(data => {\r\n                                                console.log(...data)\r\n                                                return {\r\n                                                    addHistory: state.addHistory.push(...data)\r\n                                                }\r\n                                            })\r\n                                            return {\r\n                                                history: state.addHistory,\r\n                                                    counter: result\r\n                                            }\r\n                                            default:\r\n                                                return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}