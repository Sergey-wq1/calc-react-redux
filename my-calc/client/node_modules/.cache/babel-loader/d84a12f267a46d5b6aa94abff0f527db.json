{"ast":null,"code":"import evaluate from 'mathjs';\n\nclass OperationSign {\n  constructor() {\n    this.type = ['+', '-', '*', '/', '.', '%'];\n    this.typeNoALL = ['*', '/', '.', '%'];\n  }\n\n  putAway(mas) {\n    let length_ = mas.length - 1;\n\n    if (this.type.includes(mas[length_])) {\n      console.log('1');\n      return mas.slice(0, length_);\n    }\n\n    return mas;\n  }\n\n  putFirst(mas) {\n    if (this.typeNoALL.includes(mas[0])) {\n      return 'Ошибка!';\n    }\n\n    let result = evaluate(mas);\n    return result;\n  }\n\n  endValue(mas) {\n    let length_ = mas.length - 1;\n\n    if (this.type.includes(mas[length_])) {\n      return mas.slice(0, length_);\n    }\n\n    return mas;\n  }\n\n}\n\nexport default OperationSign;","map":{"version":3,"sources":["D:/github/my-calc/client/src/scripts/PutAway.js"],"names":["evaluate","OperationSign","constructor","type","typeNoALL","putAway","mas","length_","length","includes","console","log","slice","putFirst","result","endValue"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,QAArB;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,GAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAZ;AACA,SAAKC,SAAL,GAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAjB;AACC;;AACDC,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,QAAIC,OAAO,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAA3B;;AACA,QAAI,KAAKL,IAAL,CAAUM,QAAV,CAAmBH,GAAG,CAACC,OAAD,CAAtB,CAAJ,EAAsC;AAClCG,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAOL,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAaL,OAAb,CAAP;AACH;;AACD,WAAOD,GAAP;AACH;;AACDO,EAAAA,QAAQ,CAACP,GAAD,EAAM;AACV,QAAI,KAAKF,SAAL,CAAeK,QAAf,CAAwBH,GAAG,CAAC,CAAD,CAA3B,CAAJ,EAAqC;AACjC,aAAO,SAAP;AACH;;AACD,QAAIQ,MAAM,GAAGd,QAAQ,CAACM,GAAD,CAArB;AACA,WAAOQ,MAAP;AACH;;AACDC,EAAAA,QAAQ,CAACT,GAAD,EAAM;AACV,QAAIC,OAAO,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAA3B;;AACA,QAAI,KAAKL,IAAL,CAAUM,QAAV,CAAmBH,GAAG,CAACC,OAAD,CAAtB,CAAJ,EAAsC;AAClC,aAAOD,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAaL,OAAb,CAAP;AACH;;AACD,WAAOD,GAAP;AACH;;AA1Be;;AA6BpB,eAAeL,aAAf","sourcesContent":["import evaluate from 'mathjs'\r\n\r\nclass OperationSign {\r\n  constructor() {\r\n    this.type = ['+', '-', '*', '/', '.', '%']\r\n    this.typeNoALL = ['*', '/', '.', '%']\r\n    }\r\n    putAway(mas) {\r\n        let length_ = mas.length - 1\r\n        if (this.type.includes(mas[length_])) {\r\n            console.log('1');\r\n            return mas.slice(0, length_)\r\n        }\r\n        return mas\r\n    }\r\n    putFirst(mas) {\r\n        if (this.typeNoALL.includes(mas[0])) {\r\n            return 'Ошибка!'\r\n        }\r\n        let result = evaluate(mas)\r\n        return result\r\n    }\r\n    endValue(mas) {\r\n        let length_ = mas.length - 1\r\n        if (this.type.includes(mas[length_])) {\r\n            return mas.slice(0, length_)\r\n        }\r\n        return mas\r\n    }\r\n}\r\n\r\nexport default OperationSign"]},"metadata":{},"sourceType":"module"}