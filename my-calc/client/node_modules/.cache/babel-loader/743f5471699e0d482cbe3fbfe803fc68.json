{"ast":null,"code":"import _ from 'lodash';\nimport Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport { AC, DELETEHISTORY, DEPLY, EVAL, MINUS, MULTIPLY, NUM, PERSENT, PLUS, PLUSMIN, POINT, SHOWRENEWHISTORY } from './actions/variables';\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0'\n};\n\nconst foundSign = string => {\n  const indexStatement = [];\n  indexStatement.push(_.findLastIndex(string, '+'));\n  indexStatement.push(_.findLastIndex(string, '-'));\n  indexStatement.push(_.findLastIndex(string, '/'));\n  indexStatement.push(_.findLastIndex(string, '*'));\n  const index = indexStatement.filter(i => i >= 0);\n  return index[0];\n};\n\nconst changeSign = state => {\n  const sign = ['+', '-', '/', '*'];\n  const lengthCounter = state.counter.length;\n  foundSign(state.counter);\n\n  if (state.counter[lengthCounter - 1] === '-') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1);\n    return { ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}+`\n    };\n  }\n\n  if (state.counter[lengthCounter - 1] === '+') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1);\n    return { ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}-`\n    };\n  }\n\n  if (state.counter[lengthCounter - 1].includes(sign)) console.log(1);\n  console.log(state.counter[lengthCounter - 1].includes(sign));\n  return { ...state\n  };\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case NUM:\n      {\n        if (state.counter === '0' && state.counter.length === 1) {\n          return { ...state,\n            addHistory: [],\n            counter: `${state.counter.slice(1, 2)}${action.number}`\n          };\n        }\n\n        return { ...state,\n          addHistory: [],\n          counter: `${state.counter}${action.number}`\n        };\n      }\n\n    case PLUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case AC:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '0'\n      };\n\n    case MULTIPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case MINUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case DEPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case POINT:\n      return { ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`\n      };\n\n    case PERSENT:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case PLUSMIN:\n      return changeSign(state);\n\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter))); // eslint-disable-next-line no-case-declarations\n\n      const result = operationSign.putFirst(operationSign.endValue(state.counter));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result\n      };\n\n    case DELETEHISTORY:\n      console.log(action.expression, 1);\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case SHOWRENEWHISTORY:\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default numReducer;","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/redux/numReducer.js"],"names":["_","Fetch","deleteRequest","OperationSign","updateHistory","AC","DELETEHISTORY","DEPLY","EVAL","MINUS","MULTIPLY","NUM","PERSENT","PLUS","PLUSMIN","POINT","SHOWRENEWHISTORY","initialState","disabledPoint","updateNedeed","addHistory","history","counter","foundSign","string","indexStatement","push","findLastIndex","index","filter","i","changeSign","state","sign","lengthCounter","length","historyCounter","slice","includes","console","log","numReducer","action","operationSign","type","number","putAway","pointEnd","putFirst","endValue","result","expression","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SACEC,EADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,GAPF,EAQEC,OARF,EASEC,IATF,EAUEC,OAVF,EAWEC,KAXF,EAYEC,gBAZF,QAaO,qBAbP;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,YAAY,EAAE,CAFK;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,OAAO,EAAE,EAJU;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;;AAQA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B,QAAMC,cAAc,GAAG,EAAvB;AACAA,EAAAA,cAAc,CAACC,IAAf,CAAoB1B,CAAC,CAAC2B,aAAF,CAAgBH,MAAhB,EAAwB,GAAxB,CAApB;AACAC,EAAAA,cAAc,CAACC,IAAf,CAAoB1B,CAAC,CAAC2B,aAAF,CAAgBH,MAAhB,EAAwB,GAAxB,CAApB;AACAC,EAAAA,cAAc,CAACC,IAAf,CAAoB1B,CAAC,CAAC2B,aAAF,CAAgBH,MAAhB,EAAwB,GAAxB,CAApB;AACAC,EAAAA,cAAc,CAACC,IAAf,CAAoB1B,CAAC,CAAC2B,aAAF,CAAgBH,MAAhB,EAAwB,GAAxB,CAApB;AACA,QAAMI,KAAK,GAAGH,cAAc,CAACI,MAAf,CAAuBC,CAAD,IAAOA,CAAC,IAAI,CAAlC,CAAd;AACA,SAAOF,KAAK,CAAC,CAAD,CAAZ;AACD,CARD;;AAUA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAb;AACA,QAAMC,aAAa,GAAGF,KAAK,CAACV,OAAN,CAAca,MAApC;AACAZ,EAAAA,SAAS,CAACS,KAAK,CAACV,OAAP,CAAT;;AACA,MAAIU,KAAK,CAACV,OAAN,CAAcY,aAAa,GAAG,CAA9B,MAAqC,GAAzC,EAA8C;AAC5C,UAAME,cAAc,GAAGJ,KAAK,CAACV,OAAN,CAAce,KAAd,CAAoB,CAApB,EAAuBH,aAAa,GAAG,CAAvC,CAAvB;AACA,WAAO,EACL,GAAGF,KADE;AAELZ,MAAAA,UAAU,EAAE,EAFP;AAGLF,MAAAA,aAAa,EAAE,KAHV;AAILI,MAAAA,OAAO,EAAG,GAAEc,cAAe;AAJtB,KAAP;AAMD;;AAAC,MAAIJ,KAAK,CAACV,OAAN,CAAcY,aAAa,GAAG,CAA9B,MAAqC,GAAzC,EAA8C;AAC9C,UAAME,cAAc,GAAGJ,KAAK,CAACV,OAAN,CAAce,KAAd,CAAoB,CAApB,EAAuBH,aAAa,GAAG,CAAvC,CAAvB;AACA,WAAO,EACL,GAAGF,KADE;AAELZ,MAAAA,UAAU,EAAE,EAFP;AAGLF,MAAAA,aAAa,EAAE,KAHV;AAILI,MAAAA,OAAO,EAAG,GAAEc,cAAe;AAJtB,KAAP;AAMD;;AAAC,MAAIJ,KAAK,CAACV,OAAN,CAAcY,aAAa,GAAG,CAA9B,EAAiCI,QAAjC,CAA0CL,IAA1C,CAAJ,EAAqDM,OAAO,CAACC,GAAR,CAAY,CAAZ;AACvDD,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACV,OAAN,CAAcY,aAAa,GAAG,CAA9B,EAAiCI,QAAjC,CAA0CL,IAA1C,CAAZ;AACA,SAAO,EACL,GAAGD;AADE,GAAP;AAID,CA1BD;;AA4BA,MAAMS,UAAU,GAAG,CAACT,KAAK,GAAGf,YAAT,EAAuByB,MAAvB,KAAkC;AACnD,QAAMC,aAAa,GAAG,IAAIxC,aAAJ,EAAtB;;AACA,UAAQuC,MAAM,CAACE,IAAf;AACE,SAAKjC,GAAL;AAAU;AACR,YAAIqB,KAAK,CAACV,OAAN,KAAkB,GAAlB,IAAyBU,KAAK,CAACV,OAAN,CAAca,MAAd,KAAyB,CAAtD,EAAyD;AACvD,iBAAO,EACL,GAAGH,KADE;AAELZ,YAAAA,UAAU,EAAE,EAFP;AAGLE,YAAAA,OAAO,EAAG,GAAEU,KAAK,CAACV,OAAN,CAAce,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAA0B,GAAEK,MAAM,CAACG,MAAO;AAHjD,WAAP;AAKD;;AACD,eAAO,EACL,GAAGb,KADE;AAELZ,UAAAA,UAAU,EAAE,EAFP;AAGLE,UAAAA,OAAO,EAAG,GAAEU,KAAK,CAACV,OAAQ,GAAEoB,MAAM,CAACG,MAAO;AAHrC,SAAP;AAKD;;AACD,SAAKhC,IAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLF,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACG,OAAd,CAAsBd,KAAK,CAACV,OAA5B,CAAqC;AAJ5C,OAAP;;AAMF,SAAKjB,EAAL;AACE,aAAO,EACL,GAAG2B,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLF,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKZ,QAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLF,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACG,OAAd,CAAsBd,KAAK,CAACV,OAA5B,CAAqC;AAJ5C,OAAP;;AAMF,SAAKb,KAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLF,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACG,OAAd,CAAsBd,KAAK,CAACV,OAA5B,CAAqC;AAJ5C,OAAP;;AAMF,SAAKf,KAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLF,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACG,OAAd,CAAsBd,KAAK,CAACV,OAA5B,CAAqC;AAJ5C,OAAP;;AAMF,SAAKP,KAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELd,QAAAA,aAAa,EAAE,IAFV;AAGLE,QAAAA,UAAU,EAAE,EAHP;AAILE,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACI,QAAd,CAAuBf,KAAK,CAACV,OAA7B,CAAsC;AAJ7C,OAAP;;AAMF,SAAKV,OAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELZ,QAAAA,UAAU,EAAE,EAFP;AAGLE,QAAAA,OAAO,EAAG,GAAEqB,aAAa,CAACG,OAAd,CAAsBd,KAAK,CAACV,OAA5B,CAAqC;AAH5C,OAAP;;AAKF,SAAKR,OAAL;AACE,aAAOiB,UAAU,CAACC,KAAD,CAAjB;;AACF,SAAKxB,IAAL;AACEP,MAAAA,KAAK,CAAC,GAAD,EAAM,MAAN,EAAc+B,KAAK,CAACV,OAApB,EAA6BqB,aAAa,CAACK,QAAd,CAAuBL,aAAa,CAACM,QAAd,CAAuBjB,KAAK,CAACV,OAA7B,CAAvB,CAA7B,CAAL,CADF,CAEE;;AACA,YAAM4B,MAAM,GAAGP,aAAa,CAACK,QAAd,CAAuBL,aAAa,CAACM,QAAd,CAAuBjB,KAAK,CAACV,OAA7B,CAAvB,CAAf;AACA,aAAO,EACL,GAAGU,KADE;AAELb,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAAN,GAAqB,CAF9B;AAGLD,QAAAA,aAAa,EAAE,KAHV;AAILI,QAAAA,OAAO,EAAE4B;AAJJ,OAAP;;AAMF,SAAK5C,aAAL;AACEiC,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACS,UAAnB,EAA+B,CAA/B;AACAjD,MAAAA,aAAa,CAACwC,MAAM,CAACS,UAAR,EAAoBT,MAAM,CAACQ,MAA3B,CAAb;AACA,aAAO,EACL,GAAGlB,KADE;AAELb,QAAAA,YAAY,EAAEa,KAAK,CAACb,YAAN,GAAqB,CAF9B;AAGLE,QAAAA,OAAO,EAAEjB,aAAa,CAAC4B,KAAK,CAACX,OAAP;AAHjB,OAAP;;AAKF,SAAKL,gBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELX,QAAAA,OAAO,EAAEqB,MAAM,CAACU;AAFX,OAAP;;AAIF;AACE,aAAOpB,KAAP;AAzFJ;AA2FD,CA7FD;;AA+FA,eAAeS,UAAf","sourcesContent":["import _ from 'lodash'\nimport Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport {\n  AC,\n  DELETEHISTORY,\n  DEPLY,\n  EVAL,\n  MINUS,\n  MULTIPLY,\n  NUM,\n  PERSENT,\n  PLUS,\n  PLUSMIN,\n  POINT,\n  SHOWRENEWHISTORY,\n} from './actions/variables'\n\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0',\n}\n\nconst foundSign = (string) => {\n  const indexStatement = []\n  indexStatement.push(_.findLastIndex(string, '+'))\n  indexStatement.push(_.findLastIndex(string, '-'))\n  indexStatement.push(_.findLastIndex(string, '/'))\n  indexStatement.push(_.findLastIndex(string, '*'))\n  const index = indexStatement.filter((i) => i >= 0)\n  return index[0]\n}\n\nconst changeSign = (state) => {\n  const sign = ['+', '-', '/', '*']\n  const lengthCounter = state.counter.length\n  foundSign(state.counter)\n  if (state.counter[lengthCounter - 1] === '-') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1)\n    return {\n      ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}+`,\n    }\n  } if (state.counter[lengthCounter - 1] === '+') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1)\n    return {\n      ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}-`,\n    }\n  } if (state.counter[lengthCounter - 1].includes(sign)) console.log(1)\n  console.log(state.counter[lengthCounter - 1].includes(sign))\n  return {\n    ...state,\n\n  }\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case NUM: {\n      if (state.counter === '0' && state.counter.length === 1) {\n        return {\n          ...state,\n          addHistory: [],\n          counter: `${state.counter.slice(1, 2)}${action.number}`,\n        }\n      }\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${state.counter}${action.number}`,\n      }\n    }\n    case PLUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`,\n      }\n    case AC:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '0',\n      }\n    case MULTIPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`,\n      }\n    case MINUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`,\n      }\n    case DEPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`,\n      }\n    case POINT:\n      return {\n        ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`,\n      }\n    case PERSENT:\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`,\n      }\n    case PLUSMIN:\n      return changeSign(state)\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n      // eslint-disable-next-line no-case-declarations\n      const result = operationSign.putFirst(operationSign.endValue(state.counter))\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result,\n      }\n    case DELETEHISTORY:\n      console.log(action.expression, 1)\n      deleteRequest(action.expression, action.result)\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history),\n      }\n    case SHOWRENEWHISTORY:\n      return {\n        ...state,\n        history: action.data,\n      }\n    default:\n      return state\n  }\n}\n\nexport default numReducer\n"]},"metadata":{},"sourceType":"module"}