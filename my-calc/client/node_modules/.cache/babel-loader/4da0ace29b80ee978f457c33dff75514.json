{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\my-calc\\\\client\\\\src\\\\App.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Calc from './components/Calc';\nimport { acNumOperation, delplyNumOperation, eightNumOperation, evalNumOperation, fiveNumOperation, fourNumOperation, minusplyNumOperation, multiplyNumOperation, nineNumOperation, oneNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, persentNumOperation, sevenNumOperation, sixNumOperation, threeNumOperation, twoNumOperation, zeroNumOperation } from './actions/actions';\nimport operationArrayray from './data/dataRedux';\nimport functions from './data/functions';\nimport typeOperation from './scripts/buttonCalback';\nimport History from './components/History';\nimport ButtonJSX from './scripts/retButJSX';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  const funcOperation = functions(props);\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type);\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val);\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val);\n    return ButtonJSX.rest(funcOperation[val.data], i, val);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: props,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  history: state.history,\n  counter: state.num\n});\n\nconst mapDispatchToProps = dispatch => ({\n  one: () => dispatch({\n    type: oneNumOperation\n  }),\n  two: () => dispatch({\n    type: twoNumOperation\n  }),\n  three: () => dispatch({\n    type: threeNumOperation\n  }),\n  four: () => dispatch({\n    type: fourNumOperation\n  }),\n  five: () => dispatch({\n    type: fiveNumOperation\n  }),\n  six: () => dispatch({\n    type: sixNumOperation\n  }),\n  seven: () => dispatch({\n    type: sevenNumOperation\n  }),\n  eight: () => dispatch({\n    type: eightNumOperation\n  }),\n  nine: () => dispatch({\n    type: nineNumOperation\n  }),\n  zero: () => dispatch({\n    type: zeroNumOperation\n  }),\n  ac: () => dispatch({\n    type: acNumOperation\n  }),\n  eval: () => dispatch({\n    type: evalNumOperation\n  }),\n  plus: () => dispatch({\n    type: plusNumOperation\n  }),\n  del: () => dispatch({\n    type: delplyNumOperation\n  }),\n  minus: () => dispatch({\n    type: minusplyNumOperation\n  }),\n  multiply: () => dispatch({\n    type: multiplyNumOperation\n  }),\n  point: () => dispatch({\n    type: pointNumOperation\n  }),\n  persent: () => dispatch({\n    type: persentNumOperation\n  }),\n  plusMinus: () => dispatch({\n    type: plusminNumOperation\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/my-calc/client/src/App.js"],"names":["connect","React","Grid","styled","Paper","Button","Calc","acNumOperation","delplyNumOperation","eightNumOperation","evalNumOperation","fiveNumOperation","fourNumOperation","minusplyNumOperation","multiplyNumOperation","nineNumOperation","oneNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","persentNumOperation","sevenNumOperation","sixNumOperation","threeNumOperation","twoNumOperation","zeroNumOperation","operationArrayray","functions","typeOperation","History","ButtonJSX","App","props","funcOperation","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","stateArray","map","val","i","valType","type","zero","data","greyButton","rest","mapStateToProps","state","history","counter","num","mapDispatchToProps","dispatch","one","two","three","four","five","six","seven","eight","nine","ac","eval","plus","del","minus","multiply","point","persent","plusMinus"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport Calc from './components/Calc'\nimport {\n  acNumOperation,\n  delplyNumOperation,\n  eightNumOperation,\n  evalNumOperation,\n  fiveNumOperation,\n  fourNumOperation,\n  minusplyNumOperation,\n  multiplyNumOperation,\n  nineNumOperation,\n  oneNumOperation,\n  plusminNumOperation,\n  plusNumOperation,\n  pointNumOperation,\n  persentNumOperation,\n  sevenNumOperation,\n  sixNumOperation,\n  threeNumOperation,\n  twoNumOperation,\n  zeroNumOperation,\n} from './actions/actions'\nimport operationArrayray from './data/dataRedux'\nimport functions from './data/functions'\nimport typeOperation from './scripts/buttonCalback'\nimport History from './components/History'\nimport ButtonJSX from './scripts/retButJSX'\n\nfunction App(props) {\n  const funcOperation = functions(props)\n\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n\n  const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type)\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val)\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  })\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Item><Calc values={props} operationArray={stateArray} /></Item>\n        </Grid>\n        <Grid item>\n          <Item><History history={props} /></Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => (\n  {\n    history: state.history,\n    counter: state.num,\n  })\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    one: () => dispatch({ type: oneNumOperation }),\n    two: () => dispatch({ type: twoNumOperation }),\n    three: () => dispatch({ type: threeNumOperation }),\n    four: () => dispatch({ type: fourNumOperation }),\n    five: () => dispatch({ type: fiveNumOperation }),\n    six: () => dispatch({ type: sixNumOperation }),\n    seven: () => dispatch({ type: sevenNumOperation }),\n    eight: () => dispatch({ type: eightNumOperation }),\n    nine: () => dispatch({ type: nineNumOperation }),\n    zero: () => dispatch({ type: zeroNumOperation }),\n\n    ac: () => dispatch({ type: acNumOperation }),\n    eval: () => dispatch({ type: evalNumOperation }),\n    plus: () => dispatch({ type: plusNumOperation }),\n    del: () => dispatch({ type: delplyNumOperation }),\n    minus: () => dispatch({ type: minusplyNumOperation }),\n    multiply: () => dispatch({ type: multiplyNumOperation }),\n    point: () => dispatch({ type: pointNumOperation }),\n    persent: () => dispatch({ type: persentNumOperation }),\n    plusMinus: () => dispatch({ type: plusminNumOperation }),\n  })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}