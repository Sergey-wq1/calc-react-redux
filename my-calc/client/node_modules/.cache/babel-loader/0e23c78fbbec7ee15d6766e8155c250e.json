{"ast":null,"code":"import { acNumOperation, delplyNumOperation, evalNumOperation, minusplyNumOperation, multiplyNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, persentNumOperation, deleteHistory, showRenewHistory } from '../actions/actions';\nimport Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation';\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: ''\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return { ...state,\n        addHistory: [],\n        counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`\n      };\n\n    case plusNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case acNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: ''\n      };\n\n    case multiplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case minusplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case delplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case pointNumOperation:\n      return { ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`\n      };\n\n    case persentNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case plusminNumOperation:\n      operationSign.plusMinOperation(state.counter);\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${state.counter.slice(0, state.counter.length - 1)}-`\n      };\n\n    case evalNumOperation:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: operationSign.putFirst(operationSign.endValue(state.counter))\n      };\n\n    case deleteHistory:\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case showRenewHistory:\n      console.log('работаю');\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n\n  return undefined;\n};\n\nexport default numReducer;","map":{"version":3,"sources":["C:/git/my-calc/client/src/redux/numReducer.js"],"names":["acNumOperation","delplyNumOperation","evalNumOperation","minusplyNumOperation","multiplyNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","persentNumOperation","deleteHistory","showRenewHistory","Fetch","deleteRequest","OperationSign","updateHistory","returnObjectPropertyTypeValue","initialState","disabledPoint","updateNedeed","addHistory","history","counter","numReducer","state","action","operationSign","type","value","putAway","pointEnd","plusMinOperation","slice","length","putFirst","endValue","expression","result","console","log","data","undefined"],"mappings":"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","sourcesContent":["import {\n  acNumOperation,\n  delplyNumOperation,\n  evalNumOperation,\n  minusplyNumOperation,\n  multiplyNumOperation,\n  plusminNumOperation,\n  plusNumOperation,\n  pointNumOperation,\n  persentNumOperation,\n  deleteHistory,\n  showRenewHistory,\n} from '../actions/actions'\nimport Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation'\n\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '',\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`,\n      }\n    case plusNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`,\n      }\n    case acNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '',\n      }\n    case multiplyNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`,\n      }\n    case minusplyNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`,\n      }\n    case delplyNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`,\n      }\n    case pointNumOperation:\n      return {\n        ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`,\n      }\n    case persentNumOperation:\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`,\n      }\n    case plusminNumOperation:\n      operationSign.plusMinOperation(state.counter)\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${state.counter.slice(0, state.counter.length - 1)}-`,\n      }\n    case evalNumOperation:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: operationSign.putFirst(operationSign.endValue(state.counter)),\n      }\n    case deleteHistory:\n      deleteRequest(action.expression, action.result)\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history),\n      }\n    case showRenewHistory:\n      console.log('работаю')\n      return {\n        ...state,\n        history: action.data,\n      }\n    default:\n      return state\n  }\n  return undefined\n}\n\nexport default numReducer\n"]},"metadata":{},"sourceType":"module"}