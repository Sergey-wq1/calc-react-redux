{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\calc\\\\calc-react-redux\\\\my-calc\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Calc from './components/Calc';\nimport { valueOperation // acNumOperation,\n// delplyNumOperation,\n// evalNumOperation,\n// minusplyNumOperation,\n// multiplyNumOperation,\n// plusminNumOperation,\n// plusNumOperation,\n// pointNumOperation,\n// persentNumOperation,\n} from './redux/actions/actions';\nimport operationArrayray from './data/dataRedux'; // import functions from './data/functions'\n// import typeOperation from './scripts/buttonCalback'\n\nimport History from './components/History'; // import ButtonJSX from './scripts/retButJSX'\n\nimport getHistory from './scripts/GetRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  // eslint-disable-next-line react/destructuring-assignment\n\n  /* let blockedPoint = props.counter.disabledPoint\n  useEffect(() => {\n    blockedPoint = props.disabledPoint\n  // eslint-disable-next-line react/destructuring-assignment\n  }, [blockedPoint])*\n  // const funcOperation = functions(props)\n  const dispatch = useDispatch()\n   const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type)\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val)\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    if (val.type === ',')\n    return ButtonJSX.blockedPoint(blockedPoint, funcOperation[val.data], i, val)\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  }) */\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const store = useSelector(() => store);\n  const dispatch = useDispatch();\n\n  const handleClick = event => function () {\n    dispatch(valueOperation(event));\n  };\n\n  const stateArray = useCallback(() => {\n    const timeValue = operationArrayray.map((val, i) => /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        bgcolor: '#B0C4DE',\n        color: 'black',\n        borderRadius: 2,\n        borderColor: 'text.primary',\n        gridRow: '5',\n        width: '100%',\n        gridColumn: 'span 2'\n      },\n      variant: \"outlined\",\n      size: \"large\",\n      onClick: handleClick(val.type),\n      className: val.classStyle,\n      children: val.type\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this));\n    return timeValue;\n  }, []);\n  useEffect(() => {\n    dispatch(getHistory()); // eslint-disable-next-line react/destructuring-assignment\n  }, [store.counter.updateNedeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: props,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n/*\nconst mapStateToProps = (state) => (\n  {\n    history: state.history,\n    counter: state.num,\n  })\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    num: () => dispatch({ type: valueOperation }),\n    ac: () => dispatch({ type: acNumOperation }),\n    eval: () => dispatch({ type: evalNumOperation }),\n    plus: () => dispatch({ type: plusNumOperation }),\n    del: () => dispatch({ type: delplyNumOperation }),\n    minus: () => dispatch({ type: minusplyNumOperation }),\n    multiply: () => dispatch({ type: multiplyNumOperation }),\n    point: () => dispatch({ type: pointNumOperation }),\n    persent: () => dispatch({ type: persentNumOperation }),\n    plusMinus: () => dispatch({ type: plusminNumOperation }),\n  })\n*/\n\n\n_s(App, \"8pAHYtNkROVEl2cBBy+S1Uek7Rk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default connect()(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/App.js"],"names":["connect","useDispatch","useSelector","React","useCallback","useEffect","Grid","styled","Paper","Button","Calc","valueOperation","operationArrayray","History","getHistory","App","props","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","store","dispatch","handleClick","event","stateArray","timeValue","map","val","i","bgcolor","borderRadius","borderColor","gridRow","width","gridColumn","type","classStyle","toString","counter","updateNedeed"],"mappings":"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","sourcesContent":["import { connect, useDispatch, useSelector } from 'react-redux'\nimport React, { useCallback, useEffect } from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport Calc from './components/Calc'\nimport {\n  valueOperation,\n  // acNumOperation,\n  // delplyNumOperation,\n  // evalNumOperation,\n  // minusplyNumOperation,\n  // multiplyNumOperation,\n  // plusminNumOperation,\n  // plusNumOperation,\n  // pointNumOperation,\n  // persentNumOperation,\n} from './redux/actions/actions'\n\nimport operationArrayray from './data/dataRedux'\n// import functions from './data/functions'\n// import typeOperation from './scripts/buttonCalback'\nimport History from './components/History'\n// import ButtonJSX from './scripts/retButJSX'\nimport getHistory from './scripts/GetRequest'\n\nconst App = (props) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  /* let blockedPoint = props.counter.disabledPoint\n  useEffect(() => {\n    blockedPoint = props.disabledPoint\n  // eslint-disable-next-line react/destructuring-assignment\n  }, [blockedPoint])*\n  // const funcOperation = functions(props)\n  const dispatch = useDispatch()\n\n  const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type)\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val)\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    if (val.type === ',')\n    return ButtonJSX.blockedPoint(blockedPoint, funcOperation[val.data], i, val)\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  }) */\n\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n  const store = useSelector(() => store)\n  const dispatch = useDispatch()\n\n  const handleClick = (event) => function () {\n    dispatch(valueOperation(event))\n  }\n\n  const stateArray = useCallback(() => {\n    const timeValue = operationArrayray.map((val, i) => (\n      <Button\n        sx={{\n          bgcolor: '#B0C4DE', color: 'black', borderRadius: 2, borderColor: 'text.primary', gridRow: '5', width: '100%', gridColumn: 'span 2',\n        }}\n        variant=\"outlined\"\n        size=\"large\"\n        onClick={handleClick(val.type)}\n        key={i.toString()}\n        className={val.classStyle}\n      >\n        {val.type}\n      </Button>\n    ))\n    return timeValue\n  }, [])\n\n  useEffect(() => {\n    dispatch(getHistory())\n  // eslint-disable-next-line react/destructuring-assignment\n  }, [store.counter.updateNedeed])\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Item>\n            <Calc values={props} operationArray={stateArray} />\n          </Item>\n        </Grid>\n        <Grid item>\n          <Item>\n            <History history={props} />\n          </Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n/*\nconst mapStateToProps = (state) => (\n  {\n    history: state.history,\n    counter: state.num,\n  })\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    num: () => dispatch({ type: valueOperation }),\n    ac: () => dispatch({ type: acNumOperation }),\n    eval: () => dispatch({ type: evalNumOperation }),\n    plus: () => dispatch({ type: plusNumOperation }),\n    del: () => dispatch({ type: delplyNumOperation }),\n    minus: () => dispatch({ type: minusplyNumOperation }),\n    multiply: () => dispatch({ type: multiplyNumOperation }),\n    point: () => dispatch({ type: pointNumOperation }),\n    persent: () => dispatch({ type: persentNumOperation }),\n    plusMinus: () => dispatch({ type: plusminNumOperation }),\n  })\n*/\nexport default connect()(App)\n"]},"metadata":{},"sourceType":"module"}