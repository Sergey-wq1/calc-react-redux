{"ast":null,"code":"import { acNumOperation, delplyNumOperation, evalNumOperation, minusplyNumOperation, multiplyNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, persentNumOperation, deleteHistory, showRenewHistory } from '../actions/actions';\nimport Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation';\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: ''\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return { ...state,\n        addHistory: [],\n        counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`\n      };\n\n    case plusNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case acNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: ''\n      };\n\n    case multiplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case minusplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case delplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case pointNumOperation:\n      return { ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`\n      };\n\n    case persentNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case plusminNumOperation:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: operationSign.plusMinOperation(state.counter)\n      };\n\n    case evalNumOperation:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter))); // eslint-disable-next-line no-case-declarations\n\n      const result = operationSign.putFirst(operationSign.endValue(state.counter));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result\n      };\n\n    case deleteHistory:\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case showRenewHistory:\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default numReducer;","map":{"version":3,"sources":["C:/git/my-calc/client/src/redux/numReducer.js"],"names":["acNumOperation","delplyNumOperation","evalNumOperation","minusplyNumOperation","multiplyNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","persentNumOperation","deleteHistory","showRenewHistory","Fetch","deleteRequest","OperationSign","updateHistory","returnObjectPropertyTypeValue","initialState","disabledPoint","updateNedeed","addHistory","history","counter","numReducer","state","action","operationSign","type","value","putAway","pointEnd","plusMinOperation","putFirst","endValue","result","expression","data"],"mappings":"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","sourcesContent":["import {\n  acNumOperation,\n  delplyNumOperation,\n  evalNumOperation,\n  minusplyNumOperation,\n  multiplyNumOperation,\n  plusminNumOperation,\n  plusNumOperation,\n  pointNumOperation,\n  persentNumOperation,\n  deleteHistory,\n  showRenewHistory,\n} from '../actions/actions'\nimport Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation'\n\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '',\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return {\n        ...state,\n        addHistory: [],\n          counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`,\n      }\n      case plusNumOperation:\n        return {\n          ...state,\n          addHistory: [],\n            disabledPoint: false,\n            counter: `${operationSign.putAway(state.counter)}+`,\n        }\n        case acNumOperation:\n          return {\n            ...state,\n            addHistory: [],\n              disabledPoint: false,\n              counter: '',\n          }\n          case multiplyNumOperation:\n            return {\n              ...state,\n              addHistory: [],\n                disabledPoint: false,\n                counter: `${operationSign.putAway(state.counter)}*`,\n            }\n            case minusplyNumOperation:\n              return {\n                ...state,\n                addHistory: [],\n                  disabledPoint: false,\n                  counter: `${operationSign.putAway(state.counter)}-`,\n              }\n              case delplyNumOperation:\n                return {\n                  ...state,\n                  addHistory: [],\n                    disabledPoint: false,\n                    counter: `${operationSign.putAway(state.counter)}/`,\n                }\n                case pointNumOperation:\n                  return {\n                    ...state,\n                    disabledPoint: true,\n                      addHistory: [],\n                      counter: `${operationSign.pointEnd(state.counter)}.`,\n                  }\n                  case persentNumOperation:\n                    return {\n                      ...state,\n                      addHistory: [],\n                        counter: `${operationSign.putAway(state.counter)}%`,\n                    }\n                    case plusminNumOperation:\n                      return {\n                        ...state,\n                        addHistory: [],\n                          disabledPoint: false,\n                          counter: operationSign.plusMinOperation(state.counter),\n                      }\n                      case evalNumOperation:\n                        Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n                        // eslint-disable-next-line no-case-declarations\n                        const result = operationSign.putFirst(operationSign.endValue(state.counter))\n                        return {\n                          ...state,\n                          updateNedeed: state.updateNedeed + 1,\n                            disabledPoint: false,\n                            counter: result,\n                        }\n                        case deleteHistory:\n                          deleteRequest(action.expression, action.result)\n                          return {\n                            ...state,\n                            updateNedeed: state.updateNedeed + 1,\n                              history: updateHistory(state.history),\n                          }\n                          case showRenewHistory:\n                            return {\n                              ...state,\n                              history: action.data,\n                            }\n                            default:\n                              return state\n  }\n}\n\nexport default numReducer"]},"metadata":{},"sourceType":"module"}