{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\calc\\\\calc-react-redux\\\\my-calc\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport React, { useCallback, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper'; // import button from 'bootstrap/js/src/button'\n\nimport Button from '@mui/material/Button';\nimport Calc from './components/Calc';\nimport { acNumOperation, delplyNumOperation, evalNumOperation, minusplyNumOperation, multiplyNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, persentNumOperation, valueOperation } from './redux/actions/actions';\nimport operationArrayray from './data/dataRedux'; // import functions from './data/functions'\n// import typeOperation from './scripts/buttonCalback'\n\nimport History from './components/History'; // import ButtonJSX from './scripts/retButJSX'\n\nimport getHistory from './scripts/GetRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  // eslint-disable-next-line react/destructuring-assignment\n  let blockedPoint = props.counter.disabledPoint;\n  useEffect(() => {\n    blockedPoint = props.disabledPoint; // eslint-disable-next-line react/destructuring-assignment\n  }, [blockedPoint]); // const funcOperation = functions(props)\n\n  const dispatch = useDispatch();\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  /* const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type)\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val)\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    if (val.type === ',')\n    return ButtonJSX.blockedPoint(blockedPoint, funcOperation[val.data], i, val)\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  }) */\n\n  const handleClick = event => function () {\n    console.log(event);\n  };\n\n  const stateArray = useCallback(() => {\n    const timeValue = operationArrayray.map((val, i) => /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        bgcolor: '#B0C4DE',\n        color: 'black',\n        borderRadius: 2,\n        borderColor: 'text.primary',\n        gridRow: '5',\n        width: '100%',\n        gridColumn: 'span 2'\n      },\n      variant: \"outlined\",\n      size: \"large\",\n      onClick: handleClick(val.type),\n      className: val.classStyle,\n      children: val.type\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n    return timeValue;\n  }, []);\n  useEffect(() => {\n    dispatch(getHistory()); // eslint-disable-next-line react/destructuring-assignment\n  }, [props.counter.updateNedeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: props,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iS2X4pQ9g9pBORKUjUt0hBdnxy4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  history: state.history,\n  counter: state.num\n});\n\nconst mapDispatchToProps = dispatch => ({\n  num: () => dispatch({\n    type: valueOperation\n  }),\n  ac: () => dispatch({\n    type: acNumOperation\n  }),\n  eval: () => dispatch({\n    type: evalNumOperation\n  }),\n  plus: () => dispatch({\n    type: plusNumOperation\n  }),\n  del: () => dispatch({\n    type: delplyNumOperation\n  }),\n  minus: () => dispatch({\n    type: minusplyNumOperation\n  }),\n  multiply: () => dispatch({\n    type: multiplyNumOperation\n  }),\n  point: () => dispatch({\n    type: pointNumOperation\n  }),\n  persent: () => dispatch({\n    type: persentNumOperation\n  }),\n  plusMinus: () => dispatch({\n    type: plusminNumOperation\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/App.js"],"names":["connect","useDispatch","React","useCallback","useEffect","Grid","styled","Paper","Button","Calc","acNumOperation","delplyNumOperation","evalNumOperation","minusplyNumOperation","multiplyNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","persentNumOperation","valueOperation","operationArrayray","History","getHistory","App","props","blockedPoint","counter","disabledPoint","dispatch","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","handleClick","event","console","log","stateArray","timeValue","map","val","i","bgcolor","borderRadius","borderColor","gridRow","width","gridColumn","type","classStyle","toString","updateNedeed","mapStateToProps","state","history","num","mapDispatchToProps","ac","eval","plus","del","minus","multiply","point","persent","plusMinus"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SACEC,cADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,gBAPF,EAQEC,iBARF,EASEC,mBATF,EASuBC,cATvB,QAUO,yBAVP;AAYA,OAAOC,iBAAP,MAA8B,kBAA9B,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA,MAAIC,YAAY,GAAGD,KAAK,CAACE,OAAN,CAAcC,aAAjC;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY,GAAGD,KAAK,CAACG,aAArB,CADc,CAEhB;AACC,GAHQ,EAGN,CAACF,YAAD,CAHM,CAAT,CAHqB,CAOrB;;AACA,QAAMG,QAAQ,GAAG3B,WAAW,EAA5B;AACA,QAAM4B,IAAI,GAAGvB,MAAM,CAACC,KAAD,CAAN,CAAc,CAAC;AAAEuB,IAAAA;AAAF,GAAD,MAAgB,EACzC,GAAGA,KAAK,CAACC,UAAN,CAAiBC,KADqB;AAEzCC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFgC;AAGzCC,IAAAA,SAAS,EAAE,QAH8B;AAIzCC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC;AAJe,GAAhB,CAAd,CAAb;AAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,QAAMC,WAAW,GAAIC,KAAD,IAAW,YAAY;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAFD;;AAIA,QAAMG,UAAU,GAAGzC,WAAW,CAAC,MAAM;AACnC,UAAM0C,SAAS,GAAGzB,iBAAiB,CAAC0B,GAAlB,CAAsB,CAACC,GAAD,EAAMC,CAAN,kBACtC,QAAC,MAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,SADP;AACkBb,QAAAA,KAAK,EAAE,OADzB;AACkCc,QAAAA,YAAY,EAAE,CADhD;AACmDC,QAAAA,WAAW,EAAE,cADhE;AACgFC,QAAAA,OAAO,EAAE,GADzF;AAC8FC,QAAAA,KAAK,EAAE,MADrG;AAC6GC,QAAAA,UAAU,EAAE;AADzH,OADN;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,OAAO,EAAEd,WAAW,CAACO,GAAG,CAACQ,IAAL,CANtB;AAQE,MAAA,SAAS,EAAER,GAAG,CAACS,UARjB;AAAA,gBAUGT,GAAG,CAACQ;AAVP,OAOOP,CAAC,CAACS,QAAF,EAPP;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAcA,WAAOZ,SAAP;AACD,GAhB6B,EAgB3B,EAhB2B,CAA9B;AAkBAzC,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR,CADc,CAEhB;AACC,GAHQ,EAGN,CAACE,KAAK,CAACE,OAAN,CAAcgC,YAAf,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,MAAM,EAAElC,KAAd;AAAqB,YAAA,cAAc,EAAEoB;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,IAAD;AAAA,iCAAM,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEpB;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjED;;GAAMD,G;UAQatB,W;;;KARbsB,G;;AAmEN,MAAMoC,eAAe,GAAIC,KAAD,KACtB;AACEC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADjB;AAEEnC,EAAAA,OAAO,EAAEkC,KAAK,CAACE;AAFjB,CADsB,CAAxB;;AAMA,MAAMC,kBAAkB,GAAInC,QAAD,KACzB;AACEkC,EAAAA,GAAG,EAAE,MAAMlC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAEpC;AAAR,GAAD,CADrB;AAEE6C,EAAAA,EAAE,EAAE,MAAMpC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAE7C;AAAR,GAAD,CAFpB;AAGEuD,EAAAA,IAAI,EAAE,MAAMrC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAE3C;AAAR,GAAD,CAHtB;AAIEsD,EAAAA,IAAI,EAAE,MAAMtC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAEvC;AAAR,GAAD,CAJtB;AAKEmD,EAAAA,GAAG,EAAE,MAAMvC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAE5C;AAAR,GAAD,CALrB;AAMEyD,EAAAA,KAAK,EAAE,MAAMxC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAE1C;AAAR,GAAD,CANvB;AAOEwD,EAAAA,QAAQ,EAAE,MAAMzC,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAEzC;AAAR,GAAD,CAP1B;AAQEwD,EAAAA,KAAK,EAAE,MAAM1C,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAEtC;AAAR,GAAD,CARvB;AASEsD,EAAAA,OAAO,EAAE,MAAM3C,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAErC;AAAR,GAAD,CATzB;AAUEsD,EAAAA,SAAS,EAAE,MAAM5C,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAExC;AAAR,GAAD;AAV3B,CADyB,CAA3B;;AAcA,eAAef,OAAO,CAAC2D,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxC,GAA7C,CAAf","sourcesContent":["import { connect, useDispatch } from 'react-redux'\nimport React, { useCallback, useEffect } from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\n// import button from 'bootstrap/js/src/button'\nimport Button from '@mui/material/Button'\nimport Calc from './components/Calc'\nimport {\n  acNumOperation,\n  delplyNumOperation,\n  evalNumOperation,\n  minusplyNumOperation,\n  multiplyNumOperation,\n  plusminNumOperation,\n  plusNumOperation,\n  pointNumOperation,\n  persentNumOperation, valueOperation,\n} from './redux/actions/actions'\n\nimport operationArrayray from './data/dataRedux'\n// import functions from './data/functions'\n// import typeOperation from './scripts/buttonCalback'\nimport History from './components/History'\n// import ButtonJSX from './scripts/retButJSX'\nimport getHistory from './scripts/GetRequest'\n\nconst App = (props) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  let blockedPoint = props.counter.disabledPoint\n  useEffect(() => {\n    blockedPoint = props.disabledPoint\n  // eslint-disable-next-line react/destructuring-assignment\n  }, [blockedPoint])\n  // const funcOperation = functions(props)\n  const dispatch = useDispatch()\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n\n  /* const stateArray = operationArrayray.map((val, i) => {\n    const valType = typeOperation(val.type)\n    if (val.type === '0') return ButtonJSX.zero(funcOperation[val.data], i, val)\n    if (valType) return ButtonJSX.greyButton(funcOperation[val.data], i, val)\n    if (val.type === ',')\n    return ButtonJSX.blockedPoint(blockedPoint, funcOperation[val.data], i, val)\n    return ButtonJSX.rest(funcOperation[val.data], i, val)\n  }) */\n  const handleClick = (event) => function () {\n    console.log(event)\n  }\n\n  const stateArray = useCallback(() => {\n    const timeValue = operationArrayray.map((val, i) => (\n      <Button\n        sx={{\n          bgcolor: '#B0C4DE', color: 'black', borderRadius: 2, borderColor: 'text.primary', gridRow: '5', width: '100%', gridColumn: 'span 2',\n        }}\n        variant=\"outlined\"\n        size=\"large\"\n        onClick={handleClick(val.type)}\n        key={i.toString()}\n        className={val.classStyle}\n      >\n        {val.type}\n      </Button>\n    ))\n    return timeValue\n  }, [])\n\n  useEffect(() => {\n    dispatch(getHistory())\n  // eslint-disable-next-line react/destructuring-assignment\n  }, [props.counter.updateNedeed])\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Item>\n            <Calc values={props} operationArray={stateArray} />\n          </Item>\n        </Grid>\n        <Grid item>\n          <Item><History history={props} /></Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => (\n  {\n    history: state.history,\n    counter: state.num,\n  })\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    num: () => dispatch({ type: valueOperation }),\n    ac: () => dispatch({ type: acNumOperation }),\n    eval: () => dispatch({ type: evalNumOperation }),\n    plus: () => dispatch({ type: plusNumOperation }),\n    del: () => dispatch({ type: delplyNumOperation }),\n    minus: () => dispatch({ type: minusplyNumOperation }),\n    multiply: () => dispatch({ type: multiplyNumOperation }),\n    point: () => dispatch({ type: pointNumOperation }),\n    persent: () => dispatch({ type: persentNumOperation }),\n    plusMinus: () => dispatch({ type: plusminNumOperation }),\n  })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}