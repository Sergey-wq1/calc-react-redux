{"ast":null,"code":"import { acNumOperation, delplyNumOperation, evalNumOperation, minusplyNumOperation, multiplyNumOperation, plusminNumOperation, plusNumOperation, pointNumOperation, persentNumOperation, deleteHistory, showRenewHistory } from '../actions/actions';\nimport Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation';\nconst initialState = {\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: ''\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return { ...state,\n        addHistory: [],\n        counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`\n      };\n\n    case plusNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case acNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: ''\n      };\n\n    case multiplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case minusplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case delplyNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case pointNumOperation:\n      operationSign.blockedPoint.apply(this);\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}.`\n      };\n\n    case persentNumOperation:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case plusminNumOperation:\n      if (state.counter[state.counter.length - 1] === '+') {\n        return { ...state,\n          addHistory: [],\n          counter: `${state.counter.slice(0, state.counter.length - 1)}-`\n        };\n      }\n\n      if (state.counter[state.counter.length - 1] === '-') {\n        return { ...state,\n          addHistory: [],\n          counter: `${state.counter.slice(0, state.counter.length - 1)}+`\n        };\n      }\n\n      break;\n\n    case evalNumOperation:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        counter: operationSign.putFirst(operationSign.endValue(state.counter))\n      };\n\n    case deleteHistory:\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case showRenewHistory:\n      console.log('работаю');\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n\n  return undefined;\n};\n\nexport default numReducer;","map":{"version":3,"sources":["C:/git/my-calc/client/src/redux/numReducer.js"],"names":["acNumOperation","delplyNumOperation","evalNumOperation","minusplyNumOperation","multiplyNumOperation","plusminNumOperation","plusNumOperation","pointNumOperation","persentNumOperation","deleteHistory","showRenewHistory","Fetch","deleteRequest","OperationSign","updateHistory","returnObjectPropertyTypeValue","initialState","updateNedeed","addHistory","history","counter","numReducer","state","action","operationSign","type","value","putAway","blockedPoint","apply","length","slice","putFirst","endValue","expression","result","console","log","data","undefined"],"mappings":"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","sourcesContent":["import {\n  acNumOperation,\n  delplyNumOperation,\n  evalNumOperation,\n  minusplyNumOperation,\n  multiplyNumOperation,\n  plusminNumOperation,\n  plusNumOperation,\n  pointNumOperation,\n  persentNumOperation,\n  deleteHistory,\n  showRenewHistory,\n} from '../actions/actions'\nimport Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport returnObjectPropertyTypeValue from '../scripts/valuesNumOperation'\n\nconst initialState = {\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '',\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case returnObjectPropertyTypeValue(action.type)().type:\n      return {\n        ...state,\n        addHistory: [],\n          counter: `${state.counter}${returnObjectPropertyTypeValue(action.type)().value}`,\n      }\n      case plusNumOperation:\n        return {\n          ...state,\n          addHistory: [],\n            counter: `${operationSign.putAway(state.counter)}+`,\n        }\n        case acNumOperation:\n          return {\n            ...state,\n            addHistory: [],\n              counter: '',\n          }\n          case multiplyNumOperation:\n            return {\n              ...state,\n              addHistory: [],\n                counter: `${operationSign.putAway(state.counter)}*`,\n            }\n            case minusplyNumOperation:\n              return {\n                ...state,\n                addHistory: [],\n                  counter: `${operationSign.putAway(state.counter)}-`,\n              }\n              case delplyNumOperation:\n                return {\n                  ...state,\n                  addHistory: [],\n                    counter: `${operationSign.putAway(state.counter)}/`,\n                }\n                case pointNumOperation:\n                  operationSign.blockedPoint.apply(this)\n                  return {\n                    ...state,\n                    addHistory: [],\n                      counter: `${operationSign.putAway(state.counter)}.`,\n                  }\n                  case persentNumOperation:\n                    return {\n                      ...state,\n                      addHistory: [],\n                        counter: `${operationSign.putAway(state.counter)}%`,\n                    }\n                    case plusminNumOperation:\n                      if (state.counter[state.counter.length - 1] === '+') {\n                        return {\n                          ...state,\n                          addHistory: [],\n                          counter: `${state.counter.slice(0, state.counter.length - 1)}-`,\n                        }\n                      }\n                      if (state.counter[state.counter.length - 1] === '-') {\n                        return {\n                          ...state,\n                          addHistory: [],\n                          counter: `${state.counter.slice(0, state.counter.length - 1)}+`,\n                        }\n                      }\n                      break\n                    case evalNumOperation:\n                      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n                      return {\n                        ...state,\n                        updateNedeed: state.updateNedeed + 1,\n                          counter: operationSign.putFirst(operationSign.endValue(state.counter)),\n                      }\n                      case deleteHistory:\n                        deleteRequest(action.expression, action.result)\n                        return {\n                          ...state,\n                          updateNedeed: state.updateNedeed + 1,\n                            history: updateHistory(state.history),\n                        }\n                        case showRenewHistory:\n                          console.log('работаю')\n                          return {\n                            ...state,\n                            history: action.data,\n                          }\n                          default:\n                            return state\n  }\n  return undefined\n}\n\nexport default numReducer"]},"metadata":{},"sourceType":"module"}