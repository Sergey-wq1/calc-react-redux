{"ast":null,"code":"import { evaluate } from 'mathjs';\nexport const replacementSign = counter => {\n  const sign = ['+', '-', '*', '/', '.', '%'];\n  const lengthArray = counter.length - 1;\n\n  if (sign.includes(counter[lengthArray])) {\n    return counter.slice(0, lengthArray);\n  }\n\n  return mas;\n};\nexport const forbiddenFirstCharacter = counter => {\n  const sign = ['*', '/', '.', '%'];\n\n  if (sign.includes(counter[0])) {\n    return 'Ошибка!';\n  }\n\n  return evaluate(counter);\n};\nexport const forbiddenLastCharacter = counter => {\n  const sign = ['+', '-', '*', '/', '.', '%'];\n  const lengthArray = counter.length - 1;\n\n  if (sign.includes(counter[lengthArray])) {\n    return counter.slice(0, lengthArray);\n  }\n\n  return counter;\n};\nexport const paintPoint = counter => {\n  const returnValue = counter.toString();\n  const lengthArray = returnValue.length;\n  const returnEnd = [returnValue.slice(0, lengthArray), '0'];\n  if (returnValue[lengthArray - 1] >= 0) return [...returnValue.slice(0, lengthArray)].join('');\n  return returnEnd.join('');\n};","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/helpers/changesOperationsMath.js"],"names":["evaluate","replacementSign","counter","sign","lengthArray","length","includes","slice","mas","forbiddenFirstCharacter","forbiddenLastCharacter","paintPoint","returnValue","toString","returnEnd","join"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AAEA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAa;AAC1C,QAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAb;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAArC;;AACA,MAAIF,IAAI,CAACG,QAAL,CAAcJ,OAAO,CAACE,WAAD,CAArB,CAAJ,EAAyC;AACvC,WAAOF,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBH,WAAjB,CAAP;AACD;;AACD,SAAOI,GAAP;AACD,CAPM;AASP,OAAO,MAAMC,uBAAuB,GAAIP,OAAD,IAAa;AAClD,QAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAb;;AACA,MAAIA,IAAI,CAACG,QAAL,CAAcJ,OAAO,CAAC,CAAD,CAArB,CAAJ,EAA+B;AAC7B,WAAO,SAAP;AACD;;AACD,SAAOF,QAAQ,CAACE,OAAD,CAAf;AACD,CANM;AAQP,OAAO,MAAMQ,sBAAsB,GAAIR,OAAD,IAAa;AACjD,QAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAb;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAArC;;AACA,MAAIF,IAAI,CAACG,QAAL,CAAcJ,OAAO,CAACE,WAAD,CAArB,CAAJ,EAAyC;AACvC,WAAOF,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBH,WAAjB,CAAP;AACD;;AACD,SAAOF,OAAP;AACD,CAPM;AASP,OAAO,MAAMS,UAAU,GAAIT,OAAD,IAAa;AACrC,QAAMU,WAAW,GAAGV,OAAO,CAACW,QAAR,EAApB;AACA,QAAMT,WAAW,GAAGQ,WAAW,CAACP,MAAhC;AACA,QAAMS,SAAS,GAAG,CAACF,WAAW,CAACL,KAAZ,CAAkB,CAAlB,EAAqBH,WAArB,CAAD,EAAoC,GAApC,CAAlB;AACA,MAAIQ,WAAW,CAACR,WAAW,GAAG,CAAf,CAAX,IAAgC,CAApC,EAAuC,OAAO,CAAC,GAAGQ,WAAW,CAACL,KAAZ,CAAkB,CAAlB,EAAqBH,WAArB,CAAJ,EAAuCW,IAAvC,CAA4C,EAA5C,CAAP;AACvC,SAAOD,SAAS,CAACC,IAAV,CAAe,EAAf,CAAP;AACD,CANM","sourcesContent":["import { evaluate } from 'mathjs'\r\n\r\nexport const replacementSign = (counter) => {\r\n  const sign = ['+', '-', '*', '/', '.', '%']\r\n  const lengthArray = counter.length - 1\r\n  if (sign.includes(counter[lengthArray])) {\r\n    return counter.slice(0, lengthArray)\r\n  }\r\n  return mas\r\n}\r\n\r\nexport const forbiddenFirstCharacter = (counter) => {\r\n  const sign = ['*', '/', '.', '%']\r\n  if (sign.includes(counter[0])) {\r\n    return 'Ошибка!'\r\n  }\r\n  return evaluate(counter)\r\n}\r\n\r\nexport const forbiddenLastCharacter = (counter) => {\r\n  const sign = ['+', '-', '*', '/', '.', '%']\r\n  const lengthArray = counter.length - 1\r\n  if (sign.includes(counter[lengthArray])) {\r\n    return counter.slice(0, lengthArray)\r\n  }\r\n  return counter\r\n}\r\n\r\nexport const paintPoint = (counter) => {\r\n  const returnValue = counter.toString()\r\n  const lengthArray = returnValue.length\r\n  const returnEnd = [returnValue.slice(0, lengthArray), '0']\r\n  if (returnValue[lengthArray - 1] >= 0) return [...returnValue.slice(0, lengthArray)].join('')\r\n  return returnEnd.join('')\r\n}"]},"metadata":{},"sourceType":"module"}