{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\calc\\\\calc-react-redux\\\\my-calc\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Calc from './components/Calc';\nimport { valueOperation } from './redux/actions/actions';\nimport operation from './data/dataRedux';\nimport History from './components/History';\nimport getHistory from './scripts/GetRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event));else if (recovery) dispatch(recovery());\n  };\n\n  const stateArray = useCallback(() => operation.map((val, i) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 3,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        bgcolor: '#B0C4DE',\n        color: 'black',\n        borderRadius: 2,\n        borderColor: 'text.primary',\n        gridRow: '5',\n        width: '100%',\n        gridColumn: 'span 2'\n      },\n      variant: \"outlined\",\n      size: \"large\",\n      onClick: handleClick(val.type, val.func),\n      className: val.classStyle,\n      children: val.type\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)), []);\n  useEffect(() => {\n    dispatch(getHistory());\n  }, [store.num.updateNedeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: store,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8pAHYtNkROVEl2cBBy+S1Uek7Rk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default connect()(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/App.js"],"names":["React","useCallback","useEffect","Grid","styled","Paper","Button","connect","useDispatch","useSelector","Calc","valueOperation","operation","History","getHistory","App","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","store","state","dispatch","handleClick","event","recovery","stateArray","map","val","i","bgcolor","borderRadius","borderColor","gridRow","width","gridColumn","type","func","classStyle","toString","num","updateNedeed"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Calc from './components/Calc'\nimport { valueOperation } from './redux/actions/actions'\nimport operation from './data/dataRedux'\nimport History from './components/History'\nimport getHistory from './scripts/GetRequest'\n\nconst App = () => {\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n  const store = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event))\n    else if (recovery) dispatch(recovery())\n  }\n\n  const stateArray = useCallback(() => operation.map((val, i) => (\n    <Grid item xs={3}>\n      <Button\n        sx={{\n          bgcolor: '#B0C4DE', color: 'black', borderRadius: 2, borderColor: 'text.primary', gridRow: '5', width: '100%', gridColumn: 'span 2',\n        }}\n        variant=\"outlined\"\n        size=\"large\"\n        onClick={handleClick(val.type, val.func)}\n        key={i.toString()}\n        className={val.classStyle}\n      >\n        {val.type}\n      </Button>\n    </Grid>\n  )), [])\n\n  useEffect(() => {\n    dispatch(getHistory())\n  }, [store.num.updateNedeed])\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Item>\n            <Calc values={store} operationArray={stateArray} />\n          </Item>\n        </Grid>\n        <Grid item>\n          <Item>\n            <History history={store} />\n          </Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\nexport default connect()(App)\n"]},"metadata":{},"sourceType":"module"}