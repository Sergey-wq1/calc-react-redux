{"ast":null,"code":"import Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport { AC, DELETEHISTORY, DEPLY, EVAL, MINUS, MULTIPLY, NUM, PERSENT, PLUS, PLUSMIN, POINT, SHOWRENEWHISTORY } from './actions/variables';\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0'\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case NUM:\n      {\n        if (state.counter === 0) {\n          return { ...state,\n            addHistory: [],\n            counter: `${state.counter.shift()}${action.number}`\n          };\n        }\n\n        return { ...state,\n          addHistory: [],\n          counter: `${state.counter}${action.number}`\n        };\n      }\n\n    case PLUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case AC:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: ''\n      };\n\n    case MULTIPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case MINUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case DEPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case POINT:\n      return { ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`\n      };\n\n    case PERSENT:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case PLUSMIN:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: operationSign.plusMinOperation(state.counter)\n      };\n\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter))); // eslint-disable-next-line no-case-declarations\n\n      const result = operationSign.putFirst(operationSign.endValue(state.counter));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result\n      };\n\n    case DELETEHISTORY:\n      console.log(action.expression, 1);\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case SHOWRENEWHISTORY:\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default numReducer;","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/redux/numReducer.js"],"names":["Fetch","deleteRequest","OperationSign","updateHistory","AC","DELETEHISTORY","DEPLY","EVAL","MINUS","MULTIPLY","NUM","PERSENT","PLUS","PLUSMIN","POINT","SHOWRENEWHISTORY","initialState","disabledPoint","updateNedeed","addHistory","history","counter","numReducer","state","action","operationSign","type","shift","number","putAway","pointEnd","plusMinOperation","putFirst","endValue","result","console","log","expression","data"],"mappings":"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","sourcesContent":["import Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport {\n  AC,\n  DELETEHISTORY,\n  DEPLY,\n  EVAL,\n  MINUS,\n  MULTIPLY,\n  NUM,\n  PERSENT,\n  PLUS,\n  PLUSMIN,\n  POINT,\n  SHOWRENEWHISTORY,\n} from './actions/variables'\n\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0',\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case NUM: {\n      if (state.counter === 0) {\n        return {\n          ...state,\n          addHistory: [],\n          counter: `${state.counter.shift()}${action.number}`,\n        }\n      }\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${state.counter}${action.number}`,\n      }\n    }\n    case PLUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`,\n      }\n    case AC:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '',\n      }\n    case MULTIPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`,\n      }\n    case MINUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`,\n      }\n    case DEPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`,\n      }\n    case POINT:\n      return {\n        ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`,\n      }\n    case PERSENT:\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`,\n      }\n    case PLUSMIN:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: operationSign.plusMinOperation(state.counter),\n      }\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n      // eslint-disable-next-line no-case-declarations\n      const result = operationSign.putFirst(operationSign.endValue(state.counter))\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result,\n      }\n    case DELETEHISTORY:\n      console.log(action.expression, 1)\n      deleteRequest(action.expression, action.result)\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history),\n      }\n    case SHOWRENEWHISTORY:\n      return {\n        ...state,\n        history: action.data,\n      }\n    default:\n      return state\n  }\n}\n\nexport default numReducer\n"]},"metadata":{},"sourceType":"module"}