{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\calc\\\\calc-react-redux\\\\my-calc\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Calc from './components/Calc';\nimport { valueOperation } from './redux/actions/actions';\nimport operation from './data/dataRedux';\nimport History from './components/History';\nimport getHistory from './scripts/GetRequest';\nimport { buttonOperations, buttons, buttonZero } from \"./constant/colorSchemeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Item = styled(Paper)(({\n    theme\n  }) => ({ ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }));\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n  const checkButton = useCallback(value => {\n    if (value === 0) return buttonZero;\n    if (typeof value === 'string') return buttonOperations;\n    return buttons;\n  }, []);\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event));else if (recovery) dispatch(recovery());\n  };\n\n  const stateArray = useCallback(() => operation.map((val, i) => {\n    const buttonSettings = checkButton(val.type);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: buttonSettings.size,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          bgcolor: buttonSettings.color,\n          color: 'white',\n          borderRadius: 2,\n          borderColor: 'text.primary',\n          gridRow: '5',\n          width: '100%',\n          gridColumn: 'span 2'\n        },\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: handleClick(val.type, val.func),\n        className: val.classStyle,\n        children: val.type\n      }, i.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }), []);\n  useEffect(() => {\n    dispatch(getHistory());\n  }, [store.num.updateNedeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            values: store,\n            operationArray: stateArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(History, {\n            history: store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"tCG5bhpku24m2cAhDh78evcufk0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default connect()(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/App.js"],"names":["React","useCallback","useEffect","Grid","styled","Paper","Button","connect","useDispatch","useSelector","Calc","valueOperation","operation","History","getHistory","buttonOperations","buttons","buttonZero","App","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","store","state","dispatch","checkButton","value","handleClick","event","recovery","stateArray","map","val","i","buttonSettings","type","size","bgcolor","borderRadius","borderColor","gridRow","width","gridColumn","func","classStyle","toString","num","updateNedeed"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react'\nimport { Grid } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Calc from './components/Calc'\nimport { valueOperation } from './redux/actions/actions'\nimport operation from './data/dataRedux'\nimport History from './components/History'\nimport getHistory from './scripts/GetRequest'\nimport {buttonOperations, buttons, buttonZero} from \"./constant/colorSchemeButton\";\n\nconst App = () => {\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }))\n  const store = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const checkButton = useCallback((value) => {\n    if(value === 0) return buttonZero\n    if(typeof value === 'string') return buttonOperations\n    return buttons\n  }, [])\n\n  const handleClick = (event, recovery) => function () {\n    if (typeof event === 'number') dispatch(valueOperation(event))\n    else if (recovery) dispatch(recovery())\n  }\n\n  const stateArray = useCallback(() => operation.map((val, i) => {\n    const buttonSettings = checkButton(val.type)\n    return (\n      <Grid item xs={buttonSettings.size}>\n        <Button\n          sx={{\n            bgcolor: buttonSettings.color,\n            color: 'white',\n            borderRadius: 2,\n            borderColor: 'text.primary',\n            gridRow: '5',\n            width: '100%',\n            gridColumn: 'span 2',\n          }}\n          variant=\"outlined\"\n          size=\"large\"\n          onClick={handleClick(val.type, val.func)}\n          key={i.toString()}\n          className={val.classStyle}\n        >\n          {val.type}\n        </Button>\n      </Grid>\n    )\n  }), [])\n\n  useEffect(() => {\n    dispatch(getHistory())\n  }, [store.num.updateNedeed])\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2} sx={{ width: 300 }}>\n        <Grid item>\n          <Item>\n            <Calc values={store} operationArray={stateArray} />\n          </Item>\n        </Grid>\n        <Grid item>\n          <Item>\n            <History history={store} />\n          </Item>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\nexport default connect()(App)\n"]},"metadata":{},"sourceType":"module"}