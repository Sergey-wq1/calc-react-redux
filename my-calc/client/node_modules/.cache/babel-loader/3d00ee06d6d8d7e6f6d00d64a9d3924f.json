{"ast":null,"code":"import Fetch from '../scripts/dataFetch';\nimport deleteRequest from '../scripts/deleteHistory';\nimport OperationSign from '../scripts/PutAway';\nimport updateHistory from '../scripts/updateHistory';\nimport { AC, DELETEHISTORY, DEPLY, EVAL, MINUS, MULTIPLY, NUM, PERSENT, PLUS, PLUSMIN, POINT, SHOWRENEWHISTORY } from './actions/variables';\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0'\n};\n\nconst foundSign = string => {};\n\nconst changeSign = state => {\n  const lengthCounter = state.counter.length;\n\n  if (state.counter[lengthCounter - 1] === '-') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1);\n    return { ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}+`\n    };\n  }\n\n  if (state.counter[lengthCounter - 1] === '+') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1);\n    return { ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}-`\n    };\n  } else if (state.counter) return { ...state,\n    addHistory: [],\n    disabledPoint: false,\n    counter: ''\n  };\n};\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign();\n\n  switch (action.type) {\n    case NUM:\n      {\n        if (state.counter === '0' && state.counter.length === 1) {\n          return { ...state,\n            addHistory: [],\n            counter: `${state.counter.slice(1, 2)}${action.number}`\n          };\n        }\n\n        return { ...state,\n          addHistory: [],\n          counter: `${state.counter}${action.number}`\n        };\n      }\n\n    case PLUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`\n      };\n\n    case AC:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '0'\n      };\n\n    case MULTIPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`\n      };\n\n    case MINUS:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`\n      };\n\n    case DEPLY:\n      return { ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`\n      };\n\n    case POINT:\n      return { ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`\n      };\n\n    case PERSENT:\n      return { ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`\n      };\n\n    case PLUSMIN:\n      return changeSign(state);\n\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter))); // eslint-disable-next-line no-case-declarations\n\n      const result = operationSign.putFirst(operationSign.endValue(state.counter));\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result\n      };\n\n    case DELETEHISTORY:\n      console.log(action.expression, 1);\n      deleteRequest(action.expression, action.result);\n      return { ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history)\n      };\n\n    case SHOWRENEWHISTORY:\n      return { ...state,\n        history: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default numReducer;","map":{"version":3,"sources":["D:/github/calc/calc-react-redux/my-calc/client/src/redux/numReducer.js"],"names":["Fetch","deleteRequest","OperationSign","updateHistory","AC","DELETEHISTORY","DEPLY","EVAL","MINUS","MULTIPLY","NUM","PERSENT","PLUS","PLUSMIN","POINT","SHOWRENEWHISTORY","initialState","disabledPoint","updateNedeed","addHistory","history","counter","foundSign","string","changeSign","state","lengthCounter","length","historyCounter","slice","numReducer","action","operationSign","type","number","putAway","pointEnd","putFirst","endValue","result","console","log","expression","data"],"mappings":"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","sourcesContent":["import Fetch from '../scripts/dataFetch'\nimport deleteRequest from '../scripts/deleteHistory'\nimport OperationSign from '../scripts/PutAway'\nimport updateHistory from '../scripts/updateHistory'\nimport {\n  AC,\n  DELETEHISTORY,\n  DEPLY,\n  EVAL,\n  MINUS,\n  MULTIPLY,\n  NUM,\n  PERSENT,\n  PLUS,\n  PLUSMIN,\n  POINT,\n  SHOWRENEWHISTORY,\n} from './actions/variables'\n\nconst initialState = {\n  disabledPoint: false,\n  updateNedeed: 0,\n  addHistory: [],\n  history: [],\n  counter: '0',\n}\n\nconst foundSign = (string) => {\n  \n}\n\nconst changeSign = (state) => {\n  const lengthCounter = state.counter.length\n  if (state.counter[lengthCounter - 1] === '-') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1)\n    return {\n      ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}+`,\n    }\n  } if (state.counter[lengthCounter - 1] === '+') {\n    const historyCounter = state.counter.slice(0, lengthCounter - 1)\n    return {\n      ...state,\n      addHistory: [],\n      disabledPoint: false,\n      counter: `${historyCounter}-`,\n    }\n  } else if (state.counter)\n  return {\n    ...state,\n    addHistory: [],\n    disabledPoint: false,\n    counter: '',\n  }\n}\n\nconst numReducer = (state = initialState, action) => {\n  const operationSign = new OperationSign()\n  switch (action.type) {\n    case NUM: {\n      if (state.counter === '0' && state.counter.length === 1) {\n        return {\n          ...state,\n          addHistory: [],\n          counter: `${state.counter.slice(1, 2)}${action.number}`,\n        }\n      }\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${state.counter}${action.number}`,\n      }\n    }\n    case PLUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}+`,\n      }\n    case AC:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: '0',\n      }\n    case MULTIPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}*`,\n      }\n    case MINUS:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}-`,\n      }\n    case DEPLY:\n      return {\n        ...state,\n        addHistory: [],\n        disabledPoint: false,\n        counter: `${operationSign.putAway(state.counter)}/`,\n      }\n    case POINT:\n      return {\n        ...state,\n        disabledPoint: true,\n        addHistory: [],\n        counter: `${operationSign.pointEnd(state.counter)}.`,\n      }\n    case PERSENT:\n      return {\n        ...state,\n        addHistory: [],\n        counter: `${operationSign.putAway(state.counter)}%`,\n      }\n    case PLUSMIN:\n      return changeSign(state)\n    case EVAL:\n      Fetch('/', 'POST', state.counter, operationSign.putFirst(operationSign.endValue(state.counter)))\n      // eslint-disable-next-line no-case-declarations\n      const result = operationSign.putFirst(operationSign.endValue(state.counter))\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        disabledPoint: false,\n        counter: result,\n      }\n    case DELETEHISTORY:\n      console.log(action.expression, 1)\n      deleteRequest(action.expression, action.result)\n      return {\n        ...state,\n        updateNedeed: state.updateNedeed + 1,\n        history: updateHistory(state.history),\n      }\n    case SHOWRENEWHISTORY:\n      return {\n        ...state,\n        history: action.data,\n      }\n    default:\n      return state\n  }\n}\n\nexport default numReducer\n"]},"metadata":{},"sourceType":"module"}